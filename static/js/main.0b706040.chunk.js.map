{"version":3,"sources":["Child.js","App.js","reportWebVitals.js","index.js"],"names":["ChildComponent","props","onClick","websocket","console","log","send","JSON","stringify","action","data","error","ENDPOINT","process","REACT_APP_ENDPOINT","App","useState","response","setResponse","ws","WebSocket","useEffect","onopen","onmessage","event","message","onclose","Child","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA2BeA,MAzBf,SAAwBC,GAkBtB,OACE,8BACI,wBAAQC,QAlBI,WAAK,IAEdC,EAAaF,EAAbE,UAEPC,QAAQC,IAAI,eAKZ,IACIF,EAAUG,KAAKC,KAAKC,UALX,CACXC,OAAQ,cACRC,KAAM,mBAIN,MAAOC,GACLP,QAAQC,IAAIM,KAMZ,6BCpBFC,EAAWC,mIAAYC,mBA0CdC,MAxCf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,KAIbd,QAAQC,IAAI,CAACO,aAGb,IAAMO,EAAK,IAAIC,UAAUR,GAyBzB,OAvBAS,qBAAU,WAEJF,IAIJA,EAAGG,OAAS,WAEVlB,QAAQC,IAAI,cAGdc,EAAGI,UAAY,SAAAC,GAEb,IAAMC,EAAUD,EAAMd,KACtBQ,EAAYO,IAGdN,EAAGO,QAAU,WACXtB,QAAQC,IAAI,oBAGb,IAGD,qCACE,cAACsB,EAAD,CAAgBxB,UAAWgB,IAC3B,8BAAMF,QC3BGW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0b706040.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ChildComponent(props) {\n\n  const sendMessage=()=>{\n\n    const {websocket} = props // websocket instance passed as props to the child component.\n\n    console.log(\"sendMessage\")\n    const data = {\n      action: \"sendmessage\",\n      data: \"Hey DynamoDB!\"\n    }\n    try {\n        websocket.send(JSON.stringify(data)) //send data to the server\n    } catch (error) {\n        console.log(error) // catch error\n    }\n  }\n\n  return (\n    <div>\n        <button onClick={sendMessage}>送信</button>\n    </div>\n  );\n}\n\nexport default ChildComponent;","import React, { useState, useEffect } from \"react\"\nimport ChildComponent from \"./Child\"\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT\n\nfunction App() {\n\n  const [response, setResponse] = useState(\"\");\n\n  console.log({ENDPOINT})\n\n  // instance of websocket connection as a class property\n  const ws = new WebSocket(ENDPOINT)\n\n  useEffect(() => {\n\n    if(!ws){\n      return\n    }\n\n    ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected')\n    }\n\n    ws.onmessage = event => {\n      // listen to data sent from the websocket server\n      const message = event.data\n      setResponse(message)\n    }\n\n    ws.onclose = () => {\n      console.log('disconnected')\n      // automatically try to reconnect on connection loss\n    }\n  }, []);\n\n  return (\n    <>\n      <ChildComponent websocket={ws} />\n      <div>{response}</div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}